<?php
/**
 * Created by PhpStorm.
 * User: ntezi
 * Date: 10/02/2016
 * Time: 23:56
 */

namespace common\components;


use Yii;
use backend\models\Place;
use yii\filters\AccessControl;
use yii\filters\VerbFilter;
use yii\helpers\Json;
use yii\web\Controller;
use common\helpers\DataHelpers;
use common\helpers\Helpers;
use common\helpers\RecordHelpers;

class BaseController extends Controller
{
    public function init()
    {
        parent::init(); // TODO: Change the autogenerated stub
    }

    public function behaviors()
    {
        return [
            'access' => [
                'class' => AccessControl::className(),
                'only' => ['logout'],
                'rules' => [
                    [
                        'actions' => ['logout'],
                        'allow' => true,
                        'roles' => ['@'],
                    ],
                ],
            ],
            'verbs' => [
                'class' => VerbFilter::className(),
                'actions' => [
                    'logout' => ['post'],
                ],
            ],
        ];
    }

    public static function accessDataByIds($param)
    {
        return [
            'get_cells' => DataHelpers::getCells($param),
            'get_sectors' => DataHelpers::getSectors($param),
            'get_services' => DataHelpers::getServices($param),
            'get_districts' => DataHelpers::getDistricts($param),
            'get_place_by_id' => DataHelpers::getPlaceById($param),
            'get_data_in_array' => Helpers::getDataInArray($param),
            'get_place_contacts' => DataHelpers::getPlaceContacts($param),
            'get_post_categories' => DataHelpers::getPostCategories($param),
            'get_places_with_status' => DataHelpers::getPlacesWithStatuses($param),
            'get_post_category_id' => DataHelpers::getPostsByPostCategoryId($param),
            'get_services_by_category_id' => DataHelpers::getServicesByCategoryId($param),
            'get_posts_by_post_category_id' => DataHelpers::getPostsByPostCategoryId($param),

        ];
    }

    public static function accessData()
    {
        return [
            'place_model' => DataHelpers::getPlace(),
            'get_keywords' => DataHelpers::getKeywords(),
            'has_profile' => RecordHelpers::hasProfile(),
            'get_all_places' => DataHelpers::getAllPlaces(),
            'all_services' => DataHelpers::getAllServices(),
            'all_categories' => DataHelpers::getAllCategories(),
            'profile_picture' => RecordHelpers::profilePicture(),
            'get_upcoming_events' => DataHelpers::getUpcomingEvents(),
            'get_profile_picture' => RecordHelpers::getProfilePicture(),
            'all_post_categories' => DataHelpers::getAllPostCategories(),
        ];
    }

    public function getUrl($place_id)
    {
        $place = Place::findOne($place_id);
        $url = 'http://';
        if (Yii::$app->controller->id == 'place') :
            $url = Yii::$app->request->baseUrl . '/place/' . $place_id . '/' . $place->slug;
        endif;

        if (Yii::$app->controller->id == 'settings') :
            $url = Yii::$app->request->baseUrl . '/settings/?id=' . $place_id;
        endif;

        return $url;
    }

    public function actionServices()
    {
        $out = [];
        if (isset($_POST['depdrop_parents'])) {
            $parents = $_POST['depdrop_parents'];

            if ($parents != null) {
                $cat_id = $parents[0];

                $out = DataHelpers::getServices($cat_id);
                echo Json::encode(['output' => $out, 'selected' => '']);
                return;
            }
        }
        echo Json::encode(['output' => '', 'selected' => '']);
    }

    public function actionDistricts()
    {
        $out = [];
        if (isset($_POST['depdrop_parents'])) {
            $parents = $_POST['depdrop_parents'];

            if ($parents != null) {
                $cat_id = $parents[0];

                $out = DataHelpers::getDistricts($cat_id);
                echo Json::encode(['output' => $out, 'selected' => '']);
                return;
            }
        }
        echo Json::encode(['output' => '', 'selected' => '']);
    }

    public function actionSectors()
    {
        $out = [];
        if (isset($_POST['depdrop_parents'])) {
            $parents = $_POST['depdrop_parents'];

            if ($parents != null) {
                $cat_id = $parents[0];

                $out = DataHelpers::getSectors($cat_id);
                echo Json::encode(['output' => $out, 'selected' => '']);
                return;
            }
        }
        echo Json::encode(['output' => '', 'selected' => '']);
    }

    public function actionCells()
    {
        $out = [];
        if (isset($_POST['depdrop_parents'])) {
            $parents = $_POST['depdrop_parents'];

            if ($parents != null) {
                $cat_id = $parents[0];

                $out = DataHelpers::getCells($cat_id);
                echo Json::encode(['output' => $out, 'selected' => '']);
                return;
            }
        }
        echo Json::encode(['output' => '', 'selected' => '']);
    }

    public function actionPostCategories()
    {
        $out = [];
        if (isset($_POST['depdrop_parents'])) {
            $parents = $_POST['depdrop_parents'];

            if ($parents != null) {
                $cat_id = $parents[0];

                $out = DataHelpers::getPostCategories($cat_id);
                echo Json::encode(['output' => $out, 'selected' => '']);
                return;
            }
        }
        echo Json::encode(['output' => '', 'selected' => '']);
    }
}